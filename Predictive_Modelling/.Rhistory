util <- read.csv("Utilities(1).csv")
row.names(util) <- util[,1]
util <- util[,-1]
utilities.df.norm <- sapply(util, scale)
View(utilities.df.norm)
row.names(utilities.df.norm) <- row.names(util)
## 24
d.norm <- dist(utilities.df.norm, method = "euclidean")
hclust1 <- hclust(d.norm, method = "complete")
plot(hclust1, hang = -1)
## 25 ---- double check
hclust2 <- cutree(hclust1, k = 5.7 )
row.names(utilities.df.norm) <- paste(hclust2, ":", row.names(util), sep = "")
utilities.df.norm
heatmap(as.matrix(utilities.df.norm), Colv = NA, hclustfun = hclust, col = rev(paste("gray", 1:99, sep = "")))
heatmap(as.matrix(utilities.df.norm), Colv = NA, hclustfun = hclust, col = rev(paste("gray", 1:99, sep = "")))
utilities.df.norm
heatmap(as.matrix(utilities.df.norm), Colv = NA, hclustfun = hclust, col = rev(paste("gray", 1:99, sep = "")))
mowers <- read.csv("RidingMowers(1).csv")
## A
library(ggplot2)
ggplot(mowers, aes(x = Income, y = Lot_Size, color = Ownership, shape = Ownership)) +
geom_point()
## B
log.reg <- glm(Ownership ~ Income + Lot_Size, data = mowers, family = "binomial")
summary(log.reg)
df <- read.csv("Sept11Travel.csv")
df <- read.csv("Sept11Travel.csv")
View(df)
x <- "Jan-01"
as.Date(paste("01-", x, sep = ""), format = "%d-%b-%y")
x <- "Feb-01"
as.Date(paste("01-", x, sep = ""), format = "%d-%b-%y")
df$Date <- as.Date(paste("01-", df$Month, sep = ""), format = "%d-%b-%y")
View(df)
df$Month <- as.Date(paste("01-", df$Month, sep = ""), format = "%d-%b-%y")
View(df)
df <- read.csv("Sept11Travel.csv")
df$Month <- as.Date(paste("01-", df$Month, sep = ""), format = "%d-%b-%y")
View(df)
class(df$Month)
str(df)
df <- read.csv("Sept11Travel.csv")
df$Month <- as.Date(paste("01-", df$Month, sep = ""), format = "%d-%b-%y")
str(df)
library(tidyverse)
train <- df %>% filter(df$Month > "2001-09-11")
View(train)
test <- df %>% filter(df$Month < "2001-09-11")
train <- df %>% filter(df$Month < "2001-09-11")
test <- df %>% filter(df$Month < "2001-09-11")
View(test)
View(train)
train <- df %>% filter(df$Month < "2001-09-11")
test <- df %>% filter(df$Month > "2001-09-11")
View(test)
View(train)
View(df)
str(df)
colnames(df)
df <- read.csv("Sept11Travel.csv")
df$Month <- as.Date(paste("01-", df$Month, sep = ""), format = "%d-%b-%y")
names(df)[names(df) == "Air.RPM..000s."] <- "Air"
names(df)[names(df) == "Rail.PM"] <- "Rail"
names(df)[names(df) == "VMT..billions."] <- "Vehicle"
colnames(df)
library(tidyverse)
train <- df %>% filter(df$Month < "2001-09-11")
test <- df %>% filter(df$Month > "2001-09-11")
View(df)
View(test)
View(train)
install.packages(c("forecast", "zoo"))
####################################################
df1 <- read.csv("Sept11Travel.csv")
library(forecast)
names(df)[names(df) == "Air.RPM..000s."] <- "Air"
names(df)[names(df) == "Rail.PM"] <- "Rail"
names(df)[names(df) == "VMT..billions."] <- "Vehicle"
library(forecast)
View(df)
####################################################
df1 <- read.csv("Sept11Travel.csv")
names(df)[names(df) == "Air.RPM..000s."] <- "Air"
names(df)[names(df) == "Rail.PM"] <- "Rail"
names(df)[names(df) == "VMT..billions."] <- "Vehicle"
library(forecast)
View(df1)
air.ts <- ts(df$Air,start = c(1990,1),end = c(2004,4),freq=12)
air.ts <- ts(df$Air,start = c(1990,1),end = c(2004,4),freq=12)
rail.ts <- ts(df$Rail,start = c(1990,1),end = c(2004,4),freq=12)
vehicle.ts <- ts(df$Vehicle,start = c(1990,1),end = c(2004,4),freq=12)
air.ts
plot(air.ts,xlab="Time",ylab="Ridership",ylim=c(1300,2300),bty="l")
summary(air.ts)
plot(air.ts,xlab="Time",ylab="Ridership",ylim=c(29650000, 69003617),bty="l")
plot(air.ts,xlab="Time",ylab="Ridership",ylim=c(min(air.ts), max(air.ts)),bty="l")
plot(air.ts,xlab="Time",ylab="Air",ylim=c(min(air.ts), max(air.ts)),bty="l")
nValid <- 32
nTrain <- length(df)-nValid
nValid <- 32
nTrain <- length(df)-nValid
train.ts <- window(df, start = c(1990,1), end = c(1991,nTrain))
valid.ts <- window(df,start = c(1990,nTrain+1),end=c(1991,nTrain+nValid))
####################################################
df1 <- read.csv("Sept11Travel.csv")
####################################################
df <- read.csv("Sept11Travel.csv")
names(df)[names(df) == "Air.RPM..000s."] <- "Air"
names(df)[names(df) == "Rail.PM"] <- "Rail"
names(df)[names(df) == "VMT..billions."] <- "Vehicle"
library(forecast)
air.ts <- ts(df$Air,start = c(1990,1),end = c(2004,4),freq=12)
rail.ts <- ts(df$Rail,start = c(1990,1),end = c(2004,4),freq=12)
vehicle.ts <- ts(df$Vehicle,start = c(1990,1),end = c(2004,4),freq=12)
air_train <- window(air.ts, start = c(1990,1), end = c(2001,8))
air_valid <- window(air.ts, start = c(2001,9), end = c(2004,4))
plot(air_train,xlab="Time",ylab="Air",ylim=c(min(air.ts), max(air.ts)),bty="l")
plot(air_valid,xlab="Time",ylab="Air",ylim=c(min(air.ts), max(air.ts)),bty="l")
plot(air_train,xlab="Time",ylab="Air",ylim=c(min(air.ts), max(air.ts)),bty="l")
plot(air_train,xlab="Time",ylab="Air",ylim=c(min(df$Air), max(df$Air)),bty="l")
plot(air_train,xlab="Time",ylab="Air",ylim=c(min(df$Air), max(df$Air)),bty="l")
plot(air_valid,xlab="Time",ylab="Air",ylim=c(min(df$Air), max(df$Air)),bty="l")
plot(air_train,xlab="Time",ylab="Air",ylim=c(min(df$Air), max(df$Air)),bty="l")
plot(air_valid,xlab="Time",ylab="Air",ylim=c(min(df$Air), max(df$Air)),bty="l")
plot(air_train,xlab="Time",ylab="Air",ylim=c(min(df$Air), max(df$Air)),bty="l")
train.lm <- tslm(air_train~trend)
# create forecasts using validation set
train.lm.pred <- forecast(train.lm, h=nValid, level=0)
nValid <- 32
# create forecasts using validation set
train.lm.pred <- forecast(train.lm, h=nValid, level=0)
plot(train.lm.pred,ylim=c(1300,2600),ylab="Ridership",xlab="Time",
bty="l",xaxt="n",xlim=c(1991,2006.25),main="",flty=2)
plot(train.lm.pred,ylim=c(min(df$Air), max(df$Air)),ylab="Air",xlab="Time",
bty="l",xaxt="n",xlim=c(1990,2002.25),main="",flty=2)
plot(train.lm.pred,ylim=c(min(df$Air), max(df$Air)),ylab="Air",xlab="Time",
bty="l",xaxt="n",xlim=c(1990,2006.25),main="",flty=2)
summary(train.lm.pred)
plot(train.lm.pred,ylim=c(min(df$Air), max(df$Air)),ylab="Air",xlab="Time",
bty="l",xaxt="n",xlim=c(1990,2006.25),main="",flty=2)
#add an axis to the current plot
axis(1,at=seq(1990,2006,1),labels=format(seq(1990,2006,1)))
# add the fitted line on the training set
lines(train.lm.pred$fitted,lwd=2,col="blue")
# add the actual time series for the validation set
lines(air_valid)
plot(train.lm.pred,ylim=c(min(df$Air), max(df$Air)),ylab="Air",xlab="Time",
bty="l",xaxt="n",xlim=c(1990,2004.5),main="",flty=2)
#add an axis to the current plot
axis(1,at=seq(1990,2004,1),labels=format(seq(1990,2004,1)))
# add the fitted line on the training set
lines(train.lm.pred$fitted,lwd=2,col="blue")
# add the actual time series for the validation set
lines(air_valid)
# add other information for clarity and appearance
lines(c(2004.25 - 3, 2004.25 - 3), c(0, 3500))
lines(c(2004.25, 2004.25), c(0, 3500))
text(1996.25, 2500, "Training")
text(2002.75, 2500, "Validation")
text(2005.25, 2500, "Future")
arrows(2004 - 3, 2450, 1991.25, 2450, code = 3, length = 0.1, lwd = 1,angle = 30)
arrows(2004.5 - 3, 2450, 2004, 2450, code = 3, length = 0.1, lwd = 1,angle = 30)
plot(train.lm.pred,ylim=c(min(df$Air), max(df$Air)),ylab="Air",xlab="Time",
bty="l",xaxt="n",xlim=c(1990,2004.5),main="",flty=2)
#add an axis to the current plot
axis(1,at=seq(1990,2004,1),labels=format(seq(1990,2004,1)))
# add the fitted line on the training set
lines(train.lm.pred$fitted,lwd=2,col="blue")
# add the actual time series for the validation set
lines(air_valid)
# add other information for clarity and appearance
lines(c(2004.25 - 3, 2004.25 - 3), c(min(df$Air), max(df$Air)))
lines(c(2004.25, 2004.25), c(min(df$Air), max(df$Air)))
plot(train.lm.pred,ylim=c(min(df$Air), max(df$Air)),ylab="Air",xlab="Time",
bty="l",xaxt="n",xlim=c(1990,2004.5),main="",flty=2)
#add an axis to the current plot
axis(1,at=seq(1990,2004,1),labels=format(seq(1990,2004,1)))
# add the fitted line on the training set
lines(train.lm.pred$fitted,lwd=2,col="blue")
# add the actual time series for the validation set
lines(air_valid)
# add other information for clarity and appearance
lines(c(2004.75 - 3, 2004.75 - 3), c(min(df$Air), max(df$Air)))
lines(c(2004.25, 2004.25), c(min(df$Air), max(df$Air)))
text(1990, 2500, "Training")
text(1990, min(df$Air), "Training")
text(2002.75, max(df$Air), "Validation")
text(1990, max(df$Air), "Training")
text(1990, max(df$Air)+1000, "Training")
text(1990, max(df$Air)+1000, "Training")
text(1990, max(df$Air)+100000, "Training")
text(1990, max(df$Air)+1000000, "Training")
text(2001.75, max(df$Air), "Validation")
arrows(2004 - 3, 10000, 1991.25, 2450, code = 3, length = 0.1, lwd = 1,angle = 30)
plot(train.lm.pred,ylim=c(min(df$Air), max(df$Air)),ylab="Air",xlab="Time",
bty="l",xaxt="n",xlim=c(1990,2004.5),main="",flty=2)
#add an axis to the current plot
axis(1,at=seq(1990,2004,1),labels=format(seq(1990,2004,1)))
# add the fitted line on the training set
lines(train.lm.pred$fitted,lwd=2,col="blue")
# add the actual time series for the validation set
lines(air_valid)
# fit basic linear trend model
train.lm.trend <- tslm(air_train ~ trend)
train.lm.trend.pred <- forecast(train.lm.trend, h=nValid, level=0)
# R will automatically set up a bunch of seasonals
# train.lm.season     <- tslm(train.ts ~ season)
train.lm.season <- tslm(air)train ~ trend + season)
# R will automatically set up a bunch of seasonals
# train.lm.season     <- tslm(train.ts ~ season)
train.lm.season <- tslm(air_train ~ trend + season)
train.lm.season.pred <- forecast(train.lm.season, h=nValid, level=0)
# plot data and forecasts
plot(train.lm.season.pred,  ylab = "Passengers", ,bty='l',xlab = "Time",xaxt="n", ylim=c(min(df$Air), max(df$Air)),xlim = c(1990,2004), main = "", flty = 2)
# plot data and forecasts
plot(train.lm.season.pred,  ylab = "Air", ,bty='l',xlab = "Time",xaxt="n", ylim=c(min(df$Air), max(df$Air)),xlim = c(1990,2004), main = "", flty = 2)
axis(1, at = seq(1990, 2004, 1))
# plot fitted values in the training period
lines(train.lm.season$fitted, lwd = 2)
# plot data in the validation period
lines(air_valid)
grid()
# this is fancier plotting to show the different data partitions
# Not as fancy as textbook
lines(c(2016.25, 2016.25), c(min(df$Air), max(df$Air)),lwd=3,col="red")
# this is fancier plotting to show the different data partitions
# Not as fancy as textbook
lines(c(2004.25, 2004.25), c(min(df$Air), max(df$Air)),lwd=3,col="red")
# this is fancier plotting to show the different data partitions
# Not as fancy as textbook
lines(c(2001.67, 2001.67), c(min(df$Air), max(df$Air)),lwd=3,col="red")
text(2001, max(df$Air), "Training",cex=1.25)
text(2004, max(df$Air), "Validation",cex=1.25)
text(2001, 3000000, "Training",cex=1.25)
text(2001, 30000000, "Training",cex=1.25)
text(1995, 30000000, "Training",cex=1.25)
text(1998, 30000000, "Training",cex=1.25)
text(2003, 40000000, "Validation",cex=1.25)
text(2002, 40000000, "Validation",cex=1.25)
plot(train.lm.season.pred,  ylab = "Air", ,bty='l',xlab = "Time",xaxt="n", ylim=c(min(df$Air), max(df$Air)),xlim = c(1990,2004), main = "", flty = 2)
axis(1, at = seq(1990, 2004, 1))
# plot fitted values in the training period
lines(train.lm.season$fitted, lwd = 2)
# plot data in the validation period
lines(air_valid)
grid()
# this is fancier plotting to show the different data partitions
# Not as fancy as textbook
lines(c(2001.67, 2001.67), c(min(df$Air), max(df$Air)),lwd=3,col="red")
text(1998, 30000000, "Training",cex=1.25)
text(2002, 40000000, "Validation",cex=1.25)
text(2002, 40000000, "Validation",cex=1)
plot(train.lm.season.pred,  ylab = "Air", ,bty='l',xlab = "Time",xaxt="n", ylim=c(min(df$Air), max(df$Air)),xlim = c(1990,2004), main = "", flty = 2)
axis(1, at = seq(1990, 2004, 1))
# plot fitted values in the training period
lines(train.lm.season$fitted, lwd = 2)
# plot data in the validation period
lines(air_valid)
grid()
# this is fancier plotting to show the different data partitions
# Not as fancy as textbook
lines(c(2001.67, 2001.67), c(min(df$Air), max(df$Air)),lwd=3,col="red")
text(1998, 30000000, "Training",cex=1.25)
text(2002, 40000000, "Validation",cex=1)
plot(train.lm.season.pred,  ylab = "Air", ,bty='l',xlab = "Time",xaxt="n", ylim=c(min(df$Air), max(df$Air)),xlim = c(1990,2004), main = "", flty = 2)
axis(1, at = seq(1990, 2004, 1))
# plot fitted values in the training period
lines(train.lm.season$fitted, lwd = 2)
# plot data in the validation period
lines(air_valid)
grid()
# this is fancier plotting to show the different data partitions
# Not as fancy as textbook
lines(c(2001.67, 2001.67), c(min(df$Air), max(df$Air)),lwd=3,col="red")
text(1998, 30000000, "Training",cex=1)
text(2002, 40000000, "Validation",cex=1)
grid()
print(summary(train.lm.season))
# R will automatically set up a bunch of seasonals
train.lm.season <- tslm(air_train ~ trend + season, lambda=0)
df <- read.csv("Sept11Travel.csv")
names(df)[names(df) == "Air.RPM..000s."] <- "Air"
names(df)[names(df) == "Rail.PM"] <- "Rail"
names(df)[names(df) == "VMT..billions."] <- "Vehicle"
library(forecast)
air.ts <- ts(df$Air,start = c(1990,1),end = c(2004,4),freq=12)
rail.ts <- ts(df$Rail,start = c(1990,1),end = c(2004,4),freq=12)
vehicle.ts <- ts(df$Vehicle,start = c(1990,1),end = c(2004,4),freq=12)
nValid <- 32
air_train <- window(air.ts, start = c(1990,1), end = c(2001,8))
air_valid <- window(air.ts, start = c(2001,9), end = c(2004,4))
plot(air_train,xlab="Time",ylab="Air",ylim=c(min(df$Air), max(df$Air)),bty="l")
# R will automatically set up a bunch of seasonals
train.lm.season <- tslm(air_train ~ trend + season, lambda=0)
train.lm.season.pred <- forecast(train.lm.season, h=nValid, level=0)
print(summary(train.lm.season))
## B
train.lm.season <- tslm(air_train ~ trend + season, lambda=0)
train.lm.season.pred <- forecast(train.lm.season, h=nValid, level=0)
print(summary(train.lm.season))
## B
train.lm.season <- tslm(air_train ~ trend + season)
train.lm.season.pred <- forecast(train.lm.season, h=nValid, level=0)
print(summary(train.lm.season))
## B
train.lm.season <- tslm(air_train ~ trend + season, lambda = 0)
train.lm.season.pred <- forecast(train.lm.season, h=nValid, level=0)
print(summary(train.lm.season))
## C
Acf(train.lm.season$residuals,lag.max=12, main="")
## E
rail_train <- window(rail.ts, start = c(1990,1), end = c(2001,8))
rail_valid <- window(rail.ts, start = c(2001,9), end = c(2004,4))
## E
rail_train <- window(rail.ts, start = c(1990,1), end = c(2001,8))
rail_valid <- window(rail.ts, start = c(2001,9), end = c(2004,4))
train.lm.quad <- tslm(rail.ts ~ poly(trend, 2, raw=TRUE) + season, lambda = 0)
print(summary(train.lm.quad))
## E
rail_train <- window(rail.ts, start = c(1990,1), end = c(2001,8))
rail_valid <- window(rail.ts, start = c(2001,9), end = c(2004,4))
train.lm.quad <- tslm(rail.ts ~ poly(trend, 2, raw=TRUE) + season)
print(summary(train.lm.quad))
## F
car_train <- window(car.ts, start = c(1990,1), end = c(2001,8))
## F
vehicle_train <- window(car.ts, start = c(1990,1), end = c(2001,8))
## F
car_train <- window(vehicle.ts, start = c(1990,1), end = c(2001,8))
car_valid <- window(vehicle.ts, start = c(2001,9), end = c(2004,4))
## E
rail_train <- window(rail.ts, start = c(1990,1), end = c(2001,8))
rail_valid <- window(rail.ts, start = c(2001,9), end = c(2004,4))
train.lm.quad <- tslm(rail_train ~ poly(trend, 2, raw=TRUE) + season)
print(summary(train.lm.quad))
## F
car_train <- window(vehicle.ts, start = c(1990,1), end = c(2001,8))
car_valid <- window(vehicle.ts, start = c(2001,9), end = c(2004,4))
train.linear.season <- tslm(car_train ~ trend + season)
print(summary(train.linear.season))
# plot data and forecasts
plot(train.lm.season.pred,  ylab = "Air", ,bty='l',xlab = "Time",xaxt="n", ylim=c(min(df$Air), max(df$Air)),xlim = c(1990,2004), main = "", flty = 2)
axis(1, at = seq(1990, 2004, 1))
# plot fitted values in the training period
lines(train.lm.season$fitted, lwd = 2)
# plot data in the validation period
lines(air_valid)
grid()
# this is fancier plotting to show the different data partitions
# Not as fancy as textbook
lines(c(2001.67, 2001.67), c(min(df$Air), max(df$Air)),lwd=3,col="red")
text(1998, 30000000, "Training",cex=1)
text(2002, 40000000, "Validation",cex=1)
grid()
plot(train.lm.pred,ylim=c(min(df$Air), max(df$Air)),ylab="Air",xlab="Time",
bty="l",xaxt="n",xlim=c(1990,2004.5),main="",flty=2)
# plot data and forecasts
plot(train.lm.season.pred,  ylab = "Air", ,bty='l',xlab = "Time",title="Air",xaxt="n", ylim=c(min(df$Air), max(df$Air)),xlim = c(1990,2004), main = "", flty = 2)
axis(1, at = seq(1990, 2004, 1))
# plot fitted values in the training period
lines(train.lm.season$fitted, lwd = 2)
# plot data in the validation period
lines(air_valid)
grid()
# this is fancier plotting to show the different data partitions
# Not as fancy as textbook
lines(c(2001.67, 2001.67), c(min(df$Air), max(df$Air)),lwd=3,col="red")
text(1998, 30000000, "Training",cex=1)
text(2002, 40000000, "Validation",cex=1)
grid()
text(1992, 65000000, "Air", cex=1.5)
train.lm.quad.pred <- forecast(train.lm.quad, h=nValid, level=0)
# Rail
plot(train.lm.quad.pred,  ylab = "Rail", ,bty='l',xlab = "Time",title="Rail",xaxt="n", ylim=c(min(df$Rail), max(df$Rail)),xlim = c(1990,2004), main = "", flty = 2)
axis(1, at = seq(1990, 2004, 1))
lines(train.lm.season$fitted, lwd = 2)
lines(train.lm.quad$fitted, lwd = 2)
lines(rail_valid)
grid()
lines(c(2001.67, 2001.67), c(min(df$Rail), max(df$Rail)),lwd=3,col="red")
text(1998, 30000000, "Training",cex=1)
text(1998, 300000000, "Training",cex=1)
text(1998, 350000000, "Training",cex=1)
text(1994, 350000000, "Training",cex=1)
text(1992, 350000000, "Training",cex=1)
text(2002, 35000000, "Validation",cex=1)
text(2002, 350000000, "Validation",cex=1)
text(1997, 650000000, "Air", cex=1.5)
train.linear.pred <- forecast(train.linear.season, h=nValid, level=0)
print(summary(train.linear.season))
# Car
plot(train.linear.pred,  ylab = "Car", ,bty='l',xlab = "Time",title="Car",xaxt="n", ylim=c(min(df$Vehicle), max(df$Vehicle)),xlim = c(1990,2004), main = "", flty = 2)
axis(1, at = seq(1990, 2004, 1))
lines(train.linear$fitted, lwd = 2)
lines(train.linear.season$fitted, lwd = 2)
lines(car_valid)
grid()
lines(c(2001.67, 2001.67), c(min(df$Vehicle), max(df$Vehicle)),lwd=3,col="red")
text(1994, 160, "Training",cex=1)
text(1995, 160, "Training",cex=1)
text(1996, 160, "Training",cex=1)
text(1999, 350000000, "Validation",cex=1)
text(1999, 160, "Validation",cex=1)
text(2001, 160, "Validation",cex=1)
text(2002, 160, "Validation",cex=1)
text(1997, 245, "Car", cex=1.5)
text(1994, 245, "Car", cex=1.5)
text(1994, 250, "Car", cex=1.5)
df <- read.csv("Sept11Travel.csv")
df <- read.csv("Sept11Travel.csv")
names(df)[names(df) == "Air.RPM..000s."] <- "Air"
names(df)[names(df) == "Rail.PM"] <- "Rail"
names(df)[names(df) == "VMT..billions."] <- "Vehicle"
## A
library(forecast)
air.ts <- ts(df$Air,start = c(1990,1),end = c(2004,4),freq=12)
rail.ts <- ts(df$Rail,start = c(1990,1),end = c(2004,4),freq=12)
vehicle.ts <- ts(df$Vehicle,start = c(1990,1),end = c(2004,4),freq=12)
nValid <- 32
air_train <- window(air.ts, start = c(1990,1), end = c(2001,8))
air_valid <- window(air.ts, start = c(2001,9), end = c(2004,4))
plot(air_train,xlab="Time",ylab="Air",ylim=c(min(df$Air), max(df$Air)),bty="l")
## B
train.lm.season <- tslm(air_train ~ trend + season, lambda = 0)
train.lm.season.pred <- forecast(train.lm.season, h=nValid, level=0)
print(summary(train.lm.season))
## D
Acf(train.lm.season$residuals,lag.max=12, main="")
## E
rail_train <- window(rail.ts, start = c(1990,1), end = c(2001,8))
rail_valid <- window(rail.ts, start = c(2001,9), end = c(2004,4))
train.lm.quad <- tslm(rail_train ~ poly(trend, 2, raw=TRUE) + season)
train.lm.quad.pred <- forecast(train.lm.quad, h=nValid, level=0)
print(summary(train.lm.quad))
## F
car_train <- window(vehicle.ts, start = c(1990,1), end = c(2001,8))
car_valid <- window(vehicle.ts, start = c(2001,9), end = c(2004,4))
train.linear.season <- tslm(car_train ~ trend + season)
train.linear.pred <- forecast(train.linear.season, h=nValid, level=0)
print(summary(train.linear.season))
## G
# Air
plot(train.lm.season.pred,  ylab = "Air", ,bty='l',xlab = "Time",xaxt="n", ylim=c(min(df$Air), max(df$Air)),xlim = c(1990,2004), main = "", flty = 2)
axis(1, at = seq(1990, 2004, 1))
lines(train.lm.season$fitted, lwd = 2)
lines(air_valid)
grid()
lines(c(2001.67, 2001.67), c(min(df$Air), max(df$Air)),lwd=3,col="red")
text(1998, 30000000, "Training",cex=1)
text(2002, 40000000, "Validation",cex=1)
text(1992, 65000000, "Air", cex=1.5)
# Rail
plot(train.lm.quad.pred,  ylab = "Rail", ,bty='l',xlab = "Time",xaxt="n", ylim=c(min(df$Rail), max(df$Rail)),xlim = c(1990,2004), main = "", flty = 2)
axis(1, at = seq(1990, 2004, 1))
lines(train.lm.quad$fitted, lwd = 2)
lines(rail_valid)
grid()
lines(c(2001.67, 2001.67), c(min(df$Rail), max(df$Rail)),lwd=3,col="red")
text(1992, 350000000, "Training",cex=1)
text(2002, 350000000, "Validation",cex=1)
text(1997, 650000000, "Air", cex=1.5)
# Car
plot(train.linear.pred,  ylab = "Car", ,bty='l',xlab = "Time",xaxt="n", ylim=c(min(df$Vehicle), max(df$Vehicle)),xlim = c(1990,2004), main = "", flty = 2)
axis(1, at = seq(1990, 2004, 1))
lines(train.linear.season$fitted, lwd = 2)
lines(car_valid)
grid()
lines(c(2001.67, 2001.67), c(min(df$Vehicle), max(df$Vehicle)),lwd=3,col="red")
text(1996, 160, "Training",cex=1)
text(2002, 160, "Validation",cex=1)
text(1994, 250, "Car", cex=1.5)
## G
# Air
plot(train.lm.season.pred,  ylab = "Air", ,bty='l',xlab = "Time",xaxt="n", ylim=c(min(df$Air), max(df$Air)),xlim = c(1990,2004), main = "", flty = 2)
axis(1, at = seq(1990, 2004, 1))
lines(train.lm.season$fitted, lwd = 2)
lines(air_valid)
grid()
lines(c(2001.67, 2001.67), c(min(df$Air), max(df$Air)),lwd=3,col="red")
text(1998, 30000000, "Training",cex=1)
text(2002, 40000000, "Validation",cex=1)
text(1992, 65000000, "Air", cex=1.5)
# Rail
plot(train.lm.quad.pred,  ylab = "Rail", ,bty='l',xlab = "Time",xaxt="n", ylim=c(min(df$Rail), max(df$Rail)),xlim = c(1990,2004), main = "", flty = 2)
axis(1, at = seq(1990, 2004, 1))
lines(train.lm.quad$fitted, lwd = 2)
lines(rail_valid)
grid()
lines(c(2001.67, 2001.67), c(min(df$Rail), max(df$Rail)),lwd=3,col="red")
text(1992, 350000000, "Training",cex=1)
text(2002, 350000000, "Validation",cex=1)
text(1997, 650000000, "Train", cex=1.5)
# Car
plot(train.linear.pred,  ylab = "Car", ,bty='l',xlab = "Time",xaxt="n", ylim=c(min(df$Vehicle), max(df$Vehicle)),xlim = c(1990,2004), main = "", flty = 2)
axis(1, at = seq(1990, 2004, 1))
lines(train.linear.season$fitted, lwd = 2)
# Rail
plot(train.lm.quad.pred,  ylab = "Rail", ,bty='l',xlab = "Time",xaxt="n", ylim=c(min(df$Rail), max(df$Rail)),xlim = c(1990,2004), main = "", flty = 2)
axis(1, at = seq(1990, 2004, 1))
lines(train.lm.quad$fitted, lwd = 2)
lines(rail_valid)
grid()
lines(c(2001.67, 2001.67), c(min(df$Rail), max(df$Rail)),lwd=3,col="red")
text(1992, 350000000, "Training",cex=1)
text(2002, 350000000, "Validation",cex=1)
text(1997, 650000000, "Rail", cex=1.5)
mowers <- read.csv("RidingMowers(1).csv")
## A
library(ggplot2)
ggplot(mowers, aes(x = Income, y = Lot_Size, color = Ownership, shape = Ownership)) +
geom_point()
